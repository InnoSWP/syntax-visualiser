name: E2E and Unit Testing

on:
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Run tests with coverage
        run: npm run test:unit:coverage
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-unit-json
          path: coverage/coverage-final.json

  install:
    name: Install
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-chrome99-ff97
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cypress install
        uses: cypress-io/github-action@v4
        with:
          runTests: false
      # report machine parameters
      - run: npx cypress info
      - run: node --version
      - run: node -p 'os.cpus()'
      - name: Build with coverage maps
        run: npm run build:coverage
        with:
          NODE_OPTIONS: "--max-old-space-size=8192"
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          if-no-files-found: error
          path: dist

  chrome-tests:
    name: Chrome tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-chrome99-ff97
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [ 1, 2, 3 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - name: Cypress info
        run: npx cypress info

      - name: Node info
        run: node -v

      - name: __e Dir
        run: ls /__e

      - name: "E2E Tests - Chrome"
        uses: cypress-io/github-action@v4
        with:
          start: npm run preview
          wait-on: "http://localhost:5050"
          browser: chrome
          record: true
          parallel: true
          group: "E2E - Chrome"
          spec: cypress/e2e/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: "cypress:server:args"
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-e2e-chrome-${{ matrix.container }}-json
          path: coverage/coverage-final.json

  firefox-tests:
    name: Firefox tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node16.14.0-chrome99-ff97
      options: --user 1001
    needs: install
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [ 1, 2, 3 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download the build folders
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      - name: "E2E Tests - Firefox"
        uses: cypress-io/github-action@v4
        with:
          start: npm run preview
          wait-on: "http://localhost:5050"
          browser: firefox
          record: true
          parallel: true
          group: "E2E - Firefox"
          spec: cypress/e2e/*
          config-file: cypress.config.ts
        env:
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage-e2e-firefox-${{ matrix.container }}-json
          path: coverage/coverage-final.json

  sonar-cloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [unit-tests, chrome-tests, firefox-tests]
    if: ${{ always() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - run: mkdir -p ./coverage-merged/unit/
      - run: mkdir -p ./coverage-merged/e2e-chrome-1/
      - run: mkdir -p ./coverage-merged/e2e-chrome-2/
      - run: mkdir -p ./coverage-merged/e2e-chrome-3/
      - run: mkdir -p ./coverage-merged/e2e-firefox-1/
      - run: mkdir -p ./coverage-merged/e2e-firefox-2/
      - run: mkdir -p ./coverage-merged/e2e-firefox-3/
      - uses: actions/download-artifact@v3
        with:
          name: coverage-unit-json
          path: ./coverage-merged/unit
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-firefox-1-json
          path: ./coverage-merged/e2e-firefox-1
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-firefox-2-json
          path: ./coverage-merged/e2e-firefox-2
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-firefox-3-json
          path: ./coverage-merged/e2e-firefox-3
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-chrome-1-json
          path: ./coverage-merged/e2e-chrome-1
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-chrome-2-json
          path: ./coverage-merged/e2e-chrome-2
      - uses: actions/download-artifact@v3
        with:
          name: coverage-e2e-chrome-3-json
          path: ./coverage-merged/e2e-chrome-3
      - run: mkdir -p ./coverage
      - name: Merge coverage
        run: nyc merge ./coverage-merged ./.nyc_output
      - name: Generate coverage
        run: nyc report -r lcov
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
